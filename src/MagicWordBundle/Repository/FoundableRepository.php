<?php

namespace MagicWordBundle\Repository;
use MagicWordBundle\Entity\Player;
use MagicWordBundle\Entity\FoundableForm;
use Innova\LexiconBundle\Entity\Language;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FoundableRepository extends \Doctrine\ORM\EntityRepository
{
    public function getByGridAndCriteria($grid, $objective)
    {
        $em = $this->_em;
        $dql = 'SELECT f FROM MagicWordBundle\Entity\FoundableForm f JOIN f.inflections i JOIN i.lemma l WHERE f.grid = :grid';

        $dql .= $objective->getCategory()
            ? ' AND l.category = '.$objective->getCategory()->getId()
            : '';

        $dql .= $objective->getNumber()
                ? ' AND i.number = '.$objective->getNumber()->getId()
                : '';

        $dql .= $objective->getGender()
                ? ' AND i.gender = '.$objective->getGender()->getId()
                : '';

        $dql .= $objective->getPerson()
                ? ' AND i.person = '.$objective->getPerson()->getId()
                : '';

        $dql .= $objective->getTense()
                ? ' AND i.tense = '.$objective->getTense()->getId()
                : '';

        $dql .= $objective->getMood()
                ? ' AND i.mood = '.$objective->getMood()->getId()
                : '';

        $query = $em->createQuery($dql);
        $query->setParameter('grid', $grid);

        return $query->getResult();
    }

    public function foundByUserAndLanguage(Player $player, Language $language)
    {
        $dql = 'SELECT f FROM MagicWordBundle:FoundableForm f
                WHERE EXISTS(
                    SELECT a FROM MagicWordBundle:Activity a
                    LEFT JOIN a.round round
                    LEFT JOIN round.grid grid
                    WHERE a.player = :player
                    AND grid.language = :language
                    AND f MEMBER OF a.foundForms
                )
                GROUP BY f.form
                ORDER BY f.form ASC
        ';

        $query = $this->_em->createQuery($dql);
        $query->setParameter('player', $player);
        $query->setParameter('language', $language);

        return $query->getResult();
    }

    public function foundableByLanguage(Language $language)
    {
        $dql = 'SELECT count(DISTINCT i.cleanedContent) FROM InnovaLexiconBundle:Inflection i
                WHERE i.language = :language';

        $query = $this->_em->createQuery($dql);
        $query->setParameter('language', $language);

        return $query->getSingleScalarResult();
    }

    public function foundCountByFormAndLanguage(FoundableForm $foundableForm, Language $language)
    {
        $dql = "SELECT count(DISTINCT p) FROM MagicWordBundle:Player p
                WHERE EXISTS(
                    SELECT a FROM MagicWordBundle:Activity a
                    LEFT JOIN a.round round
                    LEFT JOIN round.grid grid
                    WHERE a.player = p
                    AND :form MEMBER OF a.foundForms
                    AND grid.language = :language
                )";

        $query = $this->_em->createQuery($dql);
        $query->setParameter('language', $language);
        $query->setParameter('form', $foundableForm);

        return $query->getSingleScalarResult();
    }
}
